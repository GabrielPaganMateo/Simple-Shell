#include "header.h"
/*
 *
 */
char *get_path(char **env)
{
	int i = 0;
	char *path, **copy_path;

	while (env[i] != NULL)
	{
		if (_strncmp(env[i], "PATH", 4) == 0)
		{
			path = strdup(env[i]);
			copy_path = split_input(path, "=");
			free(path);
			path = strdup(copy_path[1]);
			free_grid(copy_path);
			return (path);
		}
		i++;
	}
	return (NULL);
}

char **split_dirs(char *path)
{
	char **dirs;

	dirs = split_input(path, ":");
	return (dirs);
}

char *get_command(char *line, char **dirs)
{
	int i;
	char *cwd = getcwd(NULL, 0);
	struct stat sb;

	while (dirs[i] != NULL)
	{
		chdir(dirs[i]);
		if (stat(line[0], &sb) == 0)
		{
			line[0] = strcat(dirs[i], line[0]);
			break;
		}
		i++;
	}
	chdir(cwd);
	return(line[0]);
}

int main(int ac, char **av, char **env)
{
	int i;
	char *BRRR;
	char **UAA;
	char *command;
	char const **

	(void)ac;
	(void)av;

	*av[0] = "ls";
	BRRR = get_path(env);
	printf("%s\n", BRRR);
	UAA = split_dirs(BRRR);
	command = get_command(command[0], UAA);

	printf("%s", command);
	printf("-------------------------------------------");
	printf("%s\n", BRRR);

	for (i = 0; UAA[i] != NULL; i++)
	{
		printf("%s\n", UAA[i]);
	}

	return (0);
}
